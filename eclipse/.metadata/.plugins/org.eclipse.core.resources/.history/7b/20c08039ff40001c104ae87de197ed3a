package znick_.biomesabroad.biome.biomes;

import java.awt.Color;
import java.util.Random;

import cpw.mods.fml.common.registry.GameRegistry;
import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.world.World;
import net.minecraft.world.biome.BiomeDecorator;
import net.minecraft.world.biome.BiomeGenBase;
import net.minecraft.world.gen.feature.WorldGenMelon;
import net.minecraft.world.gen.feature.WorldGenVines;
import net.minecraft.world.gen.feature.WorldGenerator;
import net.minecraftforge.common.BiomeDictionary.Type;
import znick_.biomesabroad.biome.decorator.DecoratorOvergrownMountains;
import znick_.biomesabroad.biome.decorator.DecoratorWasteland;
import znick_.biomesabroad.block.BlockBase;
import znick_.biomesabroad.generation.StructureGenerator;
import znick_.biomesabroad.generation.bush.BushTumbleweed;
import znick_.biomesabroad.generation.tree.TreeDead;
import znick_.biomesabroad.util.helper.BAMathHelper;
import znick_.biomesabroad.util.manager.BiomesAbroadBlocks;

public class BiomeWasteland extends BiomeBase {
	public BiomeWasteland(int id) {
		super(id);
		this.setBiomeName("Wasteland");
		this.setTemperatureRainfall(Float.MAX_VALUE, 0.0F);

		this.setHeight(new Height(0, 0));
		this.setDisableRain();
		this.enableSnow = false;
		this.topBlock = BiomesAbroadBlocks.blockDeadGrass;
		this.waterColorMultiplier = (new Color(255, 128, 0)).getRGB();
		this.theBiomeDecorator.generateLakes = false;
		this.type = Type.SANDY;
	}

	@Override
	public void addDefaultFlowers() {
		this.flowers.clear();
	}

	@Override
	public float getSpawningChance() {
		return 0;
	}
	
	@Override
	public BiomeDecorator createBiomeDecorator() {
        return getModdedBiomeDecorator(new DecoratorWasteland());
    }

	@Override
	public void decorate(World world, Random rand, int chunkX, int chunkZ) {
		super.decorate(world, rand, chunkX, chunkZ);

		StructureGenerator.generateStructure(world, rand, chunkX, chunkZ, this.rootHeight, BushTumbleweed.class, 1);
		StructureGenerator.generateStructure(world, rand, chunkX, chunkZ, this.rootHeight, TreeDead.class, 0.2F);
	}

}
